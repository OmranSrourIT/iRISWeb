import { Component, createElement } from "react";
import axios from "axios";
import "./ui/IRISWeb.css";
import { AiFillSave } from 'react-icons/ai';
import { AiFillCamera } from 'react-icons/ai';
import {useEffect} from 'react';
export class IRISWeb extends Component {
 
    constructor(props) {
        super(props);
        this.state = {
            WindowsApiUrlCloseDevice_Capture: "http://localhost:1234/api/Home/StopLiveImage_Capture",
            WindowsApiUrlOpenDevice_Capture: "http://localhost:1234/api/Home/OpenDeviceIRIS_Capture",
            WindowsApiUrlIrisCapture: `http://localhost:1234/api/Home/IrisCapture?WhichEye=2&QualityValue=${this.props.QualityValue}`,
            UrlVerifyCapture: "http://localhost:1234/api/Home/VerifyIRISEyesCapture",
            ShowpageloaddivLeft: false,
            ShowpageloaddivRight: false,
            ImageIRIS_Right: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$Iris2Widget.jpg`,
            ImageIRIS_Left: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$Iris2Widget.jpg`,
            ResponseMessageQuailityEyes: "",
            DivMessgaBox: false,
            QuiltyRight: "",
            QuiltyLeft: "",
            QialtyHide2: false,
            QialtyHide: false,
            DeqaIDLeft: false,
            DeqaIDRight: false,
            ErrorFlag: 'Eyes not Found',
            ListImageDelvier: [],
            IS_CAPTURE : false,
            NonError : false , 
            BlockedButtonSave : false,
            BlockedButtonVirfy : false,
            BLockedbuttonClose : false , 
            BlockedWhenave : false
        }
        //  this.SaveCaptureEyes = this.onClick.bind(this);

        this.VerfiyCaptureEyes = this.VerfiyCaptureEyes.bind(this);
    }
 
    OnchangeHandle(event) {

        this.setState({
            WindowsApiUrlIrisCapture: "http://localhost:1234/api/Home/IrisCapture?WhichEye=" + event.target.value + `&QualityValue=${this.props.QualityValue}`
        }, () => {
            // alert(this.state.WindowsApiUrlIrisCapture);
        })

    }

    ClosePopupErrorList() {
        this.setState({
            DivMessgaBox: false
        })
    }

    componentWillUnmount()
    {
       this.CloseDeviceIRIS();
    }

    
    componentDidMount() {
 
        debugger;
        //  document.getElementById("EyeCaptureButton").disabled = this.props.value;

        // axios.get(this.state.WindowsApiUrlOpenDevice_Capture)
        //     .then(response => {

        //         if (response.data[0] == 'ConnectionSuccssfult') {
        //             // alert("تم تشغيل الكاميرا بنجاح");
        //         } else if (response.data[0] == 'IS_ERROR_ALREADY_OPEN') {
        //             // alert("الكاميرا حاليا في وضع التشغيل");
        //         } else if (response.data[0] == 'IS_ERROR_NONE') {
        //             // alert("الكاميرا حاليا في وضع التشغيل");
        //         }
        //         else {
        //             if (confirm("قد يكون الجهاز غير متوفر او الخدمة متوقفة أو أنه لم يتم تثبيتها . هل تود تحميل تعريف الإصدار الأحدث من الخدمة؟")) {
        //                 window.open("./WindowsServices/IRISCameraWinSetup.msi", "_base");
        //             }

        //         }
        //     }

        //     ).catch(error => {
        //         if (confirm("قد يكون الجهاز غير متوفر او الخدمة متوقفة أو أنه لم يتم تثبيتها . هل تود تحميل تعريف الإصدار الأحدث من الخدمة؟")) {
        //             window.open("./WindowsServices/IRISCameraWinSetup.msi", "_base");
        //         }
        //     }
        //     )

    }

   CloseDeviceIRIS(){
      axios.get(this.state.WindowsApiUrlCloseDevice_Capture)
            .then(response => {
                debugger;

                if (response.data == 'Closed Successfuly') {
                    // alert("تم ايقاف الكاميرا بنجاح");
                } 
                else {
                    if (confirm("قد يكون الجهاز غير متوفر او الخدمة متوقفة أو أنه لم يتم تثبيتها . هل تود تحميل تعريف الإصدار الأحدث من الخدمة؟")) {
                        window.open("./WindowsServices/IRISCameraWinSetup.msi", "_base");
                    }

                }
            }

            ).catch(error => {
                if (confirm("قد يكون الجهاز غير متوفر او الخدمة متوقفة أو أنه لم يتم تثبيتها . هل تود تحميل تعريف الإصدار الأحدث من الخدمة؟")) {
                    window.open("./WindowsServices/IRISCameraWinSetup.msi", "_base");
                }
            }
            )
    }
    CaptureEyes() {
 
        debugger;
        this.setState({
            IS_CAPTURE : true,
            ShowpageloaddivLeft: true,
            ShowpageloaddivRight: true,
            DivMessgaBox: false,
            ImageIRIS_Right: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$Iris2Widget.jpg`,
            ImageIRIS_Left: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$Iris2Widget.jpg`,
            QuiltyRight: "",
            QuiltyLeft: "",
            QialtyHide: false,
            QialtyHide2: false,
            BlockedButtonSave : true,
        },()=>{
            axios.get(this.state.WindowsApiUrlOpenDevice_Capture)
            .then(response => {

                if (response.data[0] == 'ConnectionSuccssfult') {
                    // alert("تم تشغيل الكاميرا بنجاح");
                    
            this.props.ImageRightvalue.setValue("");
            this.props.ImageLeftvalue.setValue("");
             
                axios.get(this.state.WindowsApiUrlIrisCapture)
                .then(response => {

                    this.setState({
                        BlockedButtonSave : false,
                    })
                    
                    if (response.data.length > 0 && response.data != "IS_ERROR_UNOPEN(-1000000)R100_SDK_Sample_Device_C#") {
    
                        this.setState({
                            ShowpageloaddivLeft: false,
                            ShowpageloaddivRight: false,
                            ImageIRIS_Left: "",
                            ImageIRIS_Right: "",
                            ResponseMessageQuailityEyes: "",
                            DivMessgaBox: false,
                            QuiltyRight: "",
                            QuiltyLeft: "",
                            QialtyHide: false,
                            QialtyHide2: false,
                            BlockedButtonSave : false,
                        })
        
    
                        if (response.data == this.state.ErrorFlag) {
                            debugger;
                            this.setState({
                                ResponseMessageQuailityEyes: "كلا العينتين مفقوده",
                                ShowpageloaddivLeft: false,
                                ShowpageloaddivRight: false,
                                DeqaIDLeft: false,
                                DeqaIDRight: false,
                                DivMessgaBox: true,
                                ImageIRIS_Right: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$BlocksEysPrint.jpg`,
                                ImageIRIS_Left: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$BlocksEysPrint.jpg`,
                                QuiltyRight: "العين اليمين مفقودة",
                                QuiltyLeft: "العين اليسار  مفقودة",
                                QialtyHide: true,
                                QialtyHide2: true,
                                BlockedButtonSave : false,
                            },()=>{
                                this.props.ImageRightvalue.setValue("
                                this.props.ImageLeftvalue.setValue("
                            })
    
                        } else {
    
                            if (response.data[0].ImageQuailtyLeft != '0' && response.data[0].ImageQuailtyRight != '0') {
                                debugger;
                                if (response.data[0].MessageQuailty == 'Success,High quality') {
    
                                    this.setState({
                                        ImageIRIS_Right: "data:image/png;base64," + response.data[0].ImageRight,
                                        ImageIRIS_Left: "data:image/png;base64," + response.data[0].ImageLeft,
                                        QialtyHide: true,
                                        QialtyHide2: true,
                                        DivMessgaBox: true,
                                        ResponseMessageQuailityEyes: this.props.signatureweubQailitySuccess.value,
                                        BlockedButtonSave : false,
    
    
                                    }, () => {
                                        this.props.ImageRightvalue.setValue(response.data[0].ImageRight);
                                        this.props.ImageLeftvalue.setValue(response.data[0].ImageLeft);
                                    })
                                    if (response.data[0].ImageQuailtyRight == "110") {
                                        this.setState({
                                            DeqaIDRight: false,
                                            QuiltyRight: "العين اليمنى مفقوده",
                                            ImageIRIS_Right: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$BlocksEysPrint.jpg`,
                                        })
                                    } else {
                                        this.setState({
                                            DeqaIDRight: true,
                                            QuiltyRight: response.data[0].ImageQuailtyRight,
                                            ImageIRIS_Right: "data:image/png;base64," + response.data[0].ImageRight,
                                            BlockedButtonSave : false,
                                        })
    
                                    }
    
                                    if (response.data[0].ImageQuailtyLeft == "110") {
                                        this.setState({
                                            DeqaIDLeft: false,
                                            QuiltyLeft: "العين اليسرى مفقوده",
                                            ImageIRIS_Left: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$BlocksEysPrint.jpg`,
                                            BlockedButtonSave : false,
                                        })
                                    } else {
                                        this.setState({
                                            DeqaIDLeft: true,
                                            QuiltyLeft: response.data[0].ImageQuailtyLeft,
                                            ImageIRIS_Left: "data:image/png;base64," + response.data[0].ImageLeft,
                                            BlockedButtonSave : false,
                                        })
    
                                    }
    
                                } else {
                                    this.setState({
                                        ImageIRIS_Right: "data:image/png;base64" + response.data[0].ImageRight,
                                        ImageIRIS_Left: "data:image/png;base64" + response.data[0].ImageLeft,
                                        QialtyHide: true,
                                        QialtyHide2: true,
                                        DivMessgaBox: true,
                                        ResponseMessageQuailityEyes: this.props.signaturewebQuailityFailed.value,
                                            BlockedButtonSave : false,
                                    })
    
                                    if (response.data[0].ImageQuailtyRight == "110") {
                                        this.setState({
                                            DeqaIDRight: false,
                                            QuiltyRight: "العين اليمنى مفقوده",
                                            BlockedButtonSave : false,
                                            ImageIRIS_Right: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$BlocksEysPrint.jpg`,
                                        })
    
    
                                    } else {
                                        this.setState({
                                            DeqaIDRight: true,
                                            QuiltyRight: response.data[0].ImageQuailtyRight,
                                            BlockedButtonSave : false,
                                            ImageIRIS_Right: "data:image/png;base64," + response.data[0].ImageRight
                                        })
    
                                    }
    
                                    if (response.data[0].ImageQuailtyLeft == "110") {
                                        this.setState({
                                            DeqaIDLeft: false,
                                            QuiltyLeft: "العين اليسرى مفقوده",
                                                BlockedButtonSave : false,
                                            ImageIRIS_Left: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$BlocksEysPrint.jpg`,
                                        })
    
                                    } else {
                                        this.setState({
                                            DeqaIDLeft: true,
                                            QuiltyLeft: response.data[0].ImageQuailtyLeft,
                                            BlockedButtonSave : false,
                                            ImageIRIS_Left: "data:image/png;base64," + response.data[0].ImageLeft
                                        })
                                    }
    
                                }
    
                            } else {
                                this.setState({
                                    DivMessgaBox: true,
                                    ShowpageloaddivRight: false,
                                    ShowpageloaddivLeft: false,
                                    ImageIRIS_Right: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$Iris2Widget.jpg`,
                                    ImageIRIS_Left: `./img/${this.props.ModuleName.value}$${this.props.ImageCollection.value}$Iris2Widget.jpg`,
                                    QuiltyRight: "",
                                    QuiltyLeft: "",
                                    QialtyHide: false,
                                    QialtyHide2: false,
                                    BlockedButtonSave : false,
                                    ResponseMessageQuailityEyes: this.props.signaturewebTimeout.value
                                })
    
                            }
    
                        }
    
    
    
    
                    }
                    else{
    
                        this.setState({
                            NonError : true,
                            ShowpageloaddivLeft: false,
                            ShowpageloaddivRight: false, 
                            ResponseMessageQuailityEyes: "",
                            DivMessgaBox: false,
                            QuiltyRight: "",
                            QuiltyLeft: "",
                            QialtyHide: false,
                            QialtyHide2: false , 
                            BlockedButtonSave : false,
                        },()=>{
    
                            alert("الرجاء قم  بتوصيل الجهاز بالكمبيوتر");
                        })
     
                    }
                    console.log(response.data)
                }
    
                ).catch(error => {
                    this.setState({
                        BlockedButtonSave : false,
                    },()=>{
                        if (confirm("قد يكون الجهاز غير متوفر او الخدمة متوقفة أو أنه لم يتم تثبيتها . هل تود تحميل تعريف الإصدار الأحدث من الخدمة؟")) {
                            window.open("./WindowsServices/IRISCameraWinSetup.msi", "_base");
                        }
                    })
                  
                }
                )
           
                } else if (response.data[0] == 'IS_ERROR_ALREADY_OPEN') {
                    // alert("الكاميرا حاليا في وضع التشغيل");
                } else if (response.data[0] == 'IS_ERROR_NONE') {
                    // alert("الكاميرا حاليا في وضع التشغيل");
                }
                else {
                    if (confirm("قد يكون الجهاز غير متوفر او الخدمة متوقفة أو أنه لم يتم تثبيتها . هل تود تحميل تعريف الإصدار الأحدث من الخدمة؟")) {
                        window.open("./WindowsServices/IRISCameraWinSetup.msi", "_base");
                    }

                }



            }

            ).catch(error => {
                if (confirm("قد يكون الجهاز غير متوفر او الخدمة متوقفة أو أنه لم يتم تثبيتها . هل تود تحميل تعريف الإصدار الأحدث من الخدمة؟")) {
                    window.open("./WindowsServices/IRISCameraWinSetup.msi", "_base");
                }
            }
            )
        })

       
    }


    render() {
        return (
            <div className="container">

                {/* <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 header">
                        <img src="./img/Service$ImageIntegration$IraqLogo.png" />
                    </div>
                </div> */}

                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12">
                        <select id="sDevices" className="form-control" onChange={(event) => this.OnchangeHandle(event)} >
                            <option value="1">العــين اليســرى</option>
                            <option value="0">العـــين اليمــنى</option>
                            <option value="2" selected>كلـــتا العينــين</option>
                            {/* <option value="3" >عيــون مفقـوده</option> */}
                        </select>
                    </div>
                </div>

                <div class="row rowIrisEys">
                    <div class="col-xs-1 col-sm-1 col-md-1">

                    </div>
                    <div class="col-xs-4 col-sm-4 col-md-4">
                        <div className="img_camera">
                            {this.state.ShowpageloaddivLeft ? (<div id="pageloaddivLeft">
                            </div>) : ('')}

                        </div>
                        <div id="rcorners">العـــين اليمــنى</div>
                        {/* <img id="IMAGE_IRIS_LEFT" alt="" className="borderSstyle" width="280" height="240" style={{ border: "1px soild #000000", borderRadius: "0px 0px 25px 25px", marginTop: "-1px" }} /> */}
                        <img src={this.state.ImageIRIS_Right} id="IMAGE_IRIS_LEFT" alt="" className="borderSstyle" width="280" height="240" style={{ border: "1px soild #000000", borderRadius: "0px 0px 25px 25px", marginTop: "-1px" }} />

                        <div className="row IrisQuilty ">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                {this.state.QialtyHide ? (
                                    <div id="QialtyHide">
                                        {this.state.DeqaIDRight ? (
                                            <h4 id="DeqaIDRight" style={{ fontWeight: 'bold' }} >الدقــــة &nbsp;&nbsp; </h4>
                                        ) : ('')}

                                        <h4 id="QuiltyRight" style={{ fontWeight: 'bold', color: 'brown', fontSize: "20px" }} > {this.state.QuiltyRight}</h4>

                                    </div>) : ('')}
                            </div>
                        </div>

                    </div>
                    <div class="col-xs-4 col-sm-4 col-md-4">
                        <div className="img_camera">
                            {this.state.ShowpageloaddivRight ? (<div id="pageloaddivRight">
                            </div>) : ('')}

                        </div>
                        <div id="rcorners">العـــين اليســرى</div>
                        {/* <img id="IMAGE_IRIS_RIGHT" runat="server" className="borderSstyle" width="280" height="240"
                                        style={{ border: "1px soild #000000", borderRadius: "0px 0px 25px 25px", marginTop: "-1px" }} /> */}
                        <img src={this.state.ImageIRIS_Left} id="IMAGE_IRIS_RIGHT" alt="" className="borderSstyle" width="280" height="240" style={{ border: "1px soild #000000", borderRadius: "0px 0px 25px 25px", marginTop: "-1px" }} />
                        <div className="row IrisQuilty">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                {this.state.QialtyHide2 ? (

                                    <div id="QialtyHide2"  >
                                        {this.state.DeqaIDLeft ? (
                                            <h4 id="DeqaIDLeft" style={{ fontWeight: 'bold' }}>الدقــــة &nbsp; &nbsp; </h4>
                                        ) : ('')}

                                        <h4 id="QuiltyLeft"
                                            style={{ fontWeight: 'bold', color: 'brown', fontSize: "20px" }}>{this.state.QuiltyLeft} </h4>


                                    </div>
                                ) : ('')}
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-3 col-sm-3 col-md-3">
                        <button type="button" id="EyeCaptureButton" disabled={this.state.BlockedButtonSave} style={{display:this.props.EnableButtonCapture.value == 'false' ? "none" : "inline-flex" , justifyContent:'center' }} onClick={() => this.CaptureEyes()} className="btn btn-success btn-block">التقاط بصمه العين <h3 className="SaveCapture"> <AiFillCamera style={{ color: '#9e8615' }} /> </h3></button>

                        <button type="button" id="SaveEyeButton"
                        
                        style={{display:this.props.EnableButtonSave.value == 'false' ? "none" : "inline-flex" , justifyContent:'center' }} disabled={this.state.BlockedWhenave} onClick={() => this.SaveCaptureEyes()} className="btn  btn-block ">حفظ بصمات العين <h3 className="SaveCapture"> <AiFillSave style={{ color: '#9e8615' }} /> </h3></button>

                        <button type="button" id="EyeVeryfiyButton" disabled={this.state.BlockedButtonVirfy}
                        style={{display:this.props.EnableButtonVerify.value == 'false' ? "none" : "inline-flex" , justifyContent:'center'}}
                        onClick={() =>  this.VerfiyCaptureEyes()} className="btn btn-block ">التحقق من بصمه العين <h3 className="CheckIris">
                             {/* <AiOutlineCheckCircle style={{ color: '#9e8615' }} />  */}
                             </h3> </button>

                             <button type="button" disabled={this.state.BLockedbuttonClose} style={{justifyContent:'center'}} id="EyeVeryfiyButton"  onClick={() => this.ClosePage()} className="btn btn-block ">الغــاء<h3 className="CheckIris">
                             {/* <AiOutlineCheckCircle style={{ color: '#9e8615' }} />  */}
                             </h3> </button>

                    </div>
                </div>


                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12">
                        {this.state.DivMessgaBox ? (
                            <div id="DivMessgaBox" style={{ margin: "30px" }} >
                                <div className="ContainerClas alert">
                                    <span className="closebtn" onClick={() => this.ClosePopupErrorList()} >&times;</span>
                                    <p style={{ fontSize: "25px", color: 'white' }} id="ResponseMessageQuailityEyes">{this.state.ResponseMessageQuailityEyes}</p>
                                </div>

                            </div>
                        ) : ('')}
                    </div>
                </div>

            </div>
        );
    }

    ClosePage()
    {

        if (this.props.onClickActionClose && this.props.onClickActionClose.canExecute) {
    
            this.setState({
                BLockedbuttonClose  :true
            },()=>{

                this.props.onClickActionClose.execute();
            })
        }

    }

    VerfiyCaptureEyes() {

       
        if (this.state.IS_CAPTURE == true && this.state.NonError == false) {
            if(this.props.ImageRightvalue.value || this.props.ImageLeftvalue.value)
            {
                this.setState({
                    ListImageDelvier: [] , 
                    BlockedButtonVirfy : true,
                }, () => {
                    if (this.props.onClickActionDeliver && this.props.onClickActionDeliver.canExecute) {
                        debugger;
         
                        var RightEyeFromSytem = this.props.ImageRightvalueSystem.value;
                        var LeftEyeFromSystem = this.props.ImageLeftvalueSystem.value;
                        var RightEyeFromDevice = this.props.ImageRightvalue.value;
                        var LeftEyeFromDevice = this.props.ImageRightvalue.value;
        
        
                        this.state.ListImageDelvier.push(LeftEyeFromSystem);
                        this.state.ListImageDelvier.push(RightEyeFromSytem);
                        this.state.ListImageDelvier.push(LeftEyeFromDevice);
                        this.state.ListImageDelvier.push(RightEyeFromDevice);
        
                        axios.post(this.state.UrlVerifyCapture, this.state.ListImageDelvier)
                            .then(response => {
                                
                                if (response.data == 'true') {
                                    this.props.EyesIsMatching.setValue(true);
                                    this.props.onClickActionDeliver.execute();
                                    this.setState({
                                        DivMessgaBox : true,
                                        ResponseMessageQuailityEyes : "البصمات  متطابقة" ,
                                        BlockedButtonVirfy : false,
                                    })
    
                                } else {
                                    this.props.EyesIsMatching.setValue(false);
                                    this.props.onClickActionDeliver.execute();
                                    this.setState({
                                        DivMessgaBox : true,
                                        ResponseMessageQuailityEyes : "البصمات غير متطابقة" ,
                                        BlockedButtonVirfy : false,
                                    })
                              
        
                                }
        
                            }).catch(error => {
                                this.setState({
                                    BlockedButtonVirfy : false,
                                },()=>{
                                    alert(error);
                                })
                              
                            });
                    }
        
        
                })

            }
            else
        {
            this.setState({
                BlockedButtonVirfy : false,
            },()=>{
                alert("يرجى الالتقاط اولا "); 
            })
           
        }
            

        }else
        {
            this.setState({
                BlockedButtonVirfy : false,
            },()=>{
                alert("يرجى الالتقاط اولا "); 
            })
           
        }
       

    }

    SaveCaptureEyes() {
        debugger;
        if (this.state.IS_CAPTURE == true && this.state.NonError == false) {
            
            if(this.props.ImageRightvalue.value || this.props.ImageLeftvalue.value)
            { 
                if (this.props.onClickAction && this.props.onClickAction.canExecute) {
                    this.setState({
                        BlockedWhenave : true
                    },()=>{
                        this.props.onClickAction.execute();
                    })
                  
                }

            }else
            {
                alert("يرجى الالتقاط اولا "); 
                
            }
           

        }else
        {
            alert("يرجى الالتقاط اولا "); 
        }
       
    }
}
